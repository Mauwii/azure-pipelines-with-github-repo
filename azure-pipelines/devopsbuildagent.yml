trigger:
  branches:
    include:
      - refs/heads/main
      - update/*
      - feature/*
      - issue/*
  paths:
    include:
      - azure-pipelines/devopsbuildagent.yml
      - src/DevOpsBuildAgent

pr: none

# resources:
#   repositories:
#     - repository: DevOpsBuildAgent
#       endpoint: Mauwii
#       name: Mauwii/DevOpsBuildAgent
#       trigger:
#         branches:
#           include:
#             - main

variables:
  - name: baseOS
    value: 'linux'
  - name: baseDistro
    value: 'ubuntu'
  - name: baseVersion
    value: '20.04'
  - name: dockerRegistry
    value: 'docker.io'
  - name: dockerhubuser
    value: 'mauwii'
  - name: dockerimage
    value: 'devopsbuildagent'

stages:
  - stage: build
    jobs:
      - job:
        strategy:
          matrix:
            amd64:
              baseOS: 'linux'
              baseDistro: 'ubuntu'
              baseVersion: '20.04'
              baseArch: 'amd64'
              targetProc: 'x64'
            arm64v8:
              baseOS: 'linux'
              baseDistro: 'ubuntu'
              baseVersion: '20.04'
              baseArch: 'arm64v8'
              targetProc: 'arm64'
            # arm32v7:
            #   baseOS: 'linux'
            #   baseDistro: 'ubuntu'
            #   baseVersion: '20.04'
            #   baseArch: 'arm32v7'
            #   targetProc: 'arm'
          maxParallel: 2
        steps:
          - template: stages/jobs/steps/checkout_submodules.yml
            parameters:
              submodule: src/DevOpsBuildAgent
          - task: Docker@2
            displayName: docker login
            inputs:
              containerRegistry: 'docker-mauwii'
              command: 'login'
          - bash: 'echo "##vso[task.setvariable variable=TAG]$(baseOS).$(baseDistro).$(baseVersion).$(baseArch)${DEVTAG:+.$DEVTAG}"'
            displayName: 'set $(baseArch) tag'
            ${{ if not(in(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
              env:
                DEVTAG: 'dev'
          - bash: 'docker run --rm --privileged multiarch/qemu-user-static --reset -p yes'
            displayName: 'qemu for $(baseArch)'
          - task: Docker@2
            displayName: 'build $(baseArch)'
            inputs:
              containerRegistry: 'docker-mauwii'
              repository: 'mauwii/devopsbuildagent'
              command: 'build'
              Dockerfile: 'src/DevOpsBuildAgent/Dockerfile'
              tags: '$(TAG)'
              arguments: '--build-arg "BASEARCH=$(baseArch)" --build-arg "targetproc=$(targetProc)"'
          - task: Docker@2
            inputs:
              containerRegistry: 'docker-mauwii'
              repository: 'mauwii/devopsbuildagent'
              command: 'push'
              tags: '$(TAG)'
  - stage: manifest
    dependsOn: build
    jobs:
      - job:
        condition: succeeded()
        displayName: pushManifest
        steps:
          - task: Docker@2
            displayName: docker login
            inputs:
              containerRegistry: 'docker-mauwii'
              command: 'login'
          - bash: |
              docker manifest create "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):linux.ubuntu.20.04.amd64${DEVTAG:+.$DEVTAG}" "$(dockerhubuser)/$(dockerimage):linux.ubuntu.20.04.arm64v8${DEVTAG:+.$DEVTAG}"
              docker manifest annotate "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):linux.ubuntu.20.04.amd64${DEVTAG:+.$DEVTAG}" --os linux --arch amd64
              docker manifest annotate "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):linux.ubuntu.20.04.arm64v8${DEVTAG:+.$DEVTAG}" --os linux --arch arm64 --variant v8
              docker manifest push --purge "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}"
            ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
              env:
                DEVTAG: 'dev'
