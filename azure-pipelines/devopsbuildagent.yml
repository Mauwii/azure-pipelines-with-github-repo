trigger:
  branches:
    include:
      - refs/heads/main
      - update/*
      - feature/*
      - issue/*
  paths:
    include:
      - azure-pipelines/devopsbuildagent.yml
      - azure-pipelines/stages/jobs/build_devopsbuildagent_job.yml
      - src/DevOpsBuildAgent

pr: none

variables:
  - name: baseOS
    value: 'linux'
  - name: baseDistro
    value: 'ubuntu'
  - name: baseVersion
    value: '20.04'
  - name: dockerRegistry
    value: 'docker.io'
  - name: dockerhubuser
    value: 'mauwii'
  - name: dockerimage
    value: 'devopsbuildagent'

parameters:
  - name: matrix
    type: object
    default:
      amd64:
        baseArch: 'amd64'
        targetProc: 'x64'
      arm64:
        baseArch: 'arm64v8'
        targetProc: 'arm64'
        variant: 'v8'
  - name: maxParallelJobs
    type: number
    default: 2

stages:
  # - stage: build
  #   jobs:
  #     - template: stages/jobs/build_devopsbuildagent_job.yml
  #       parameters:
  #         matrix: ${{ parameters.matrix }}
  #         maxParallelJobs: ${{ parameters.maxParallelJobs }}
  - stage: manifest
    # dependsOn: build
    jobs:
      - job:
        condition: succeeded()
        displayName: pushManifest
        steps:
          - task: Docker@2
            displayName: docker login
            inputs:
              containerRegistry: 'docker-mauwii'
              command: 'login'
          - ${{ each value in parameters.matrix }}:
              - bash: |
                  export ARCHPARAMETERS_${{ value.baseArch }}="$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).${{ value.baseArch }}.${DEVTAG:-$(Build.BuildId)}"
                  echo "##vso[task.setvariable variable=ARCHPARAMETERS_${{ value.baseArch }}]$ARCHPARAMETERS_${{ value.baseArch }}"
                  export ARCHPARAMETERS="${ARCHPARAMETERS:+$ARCHPARAMETERS--}${ARCHPARAMETERS_${{ value.baseArch }}}"
                  echo "##vso[task.setvariable variable=ARCHPARAMETERS]$ARCHPARAMETERS"
                ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
                  env:
                    DEVTAG: 'dev'
                displayName: 'add ${{ value.baseArch }}'
          - bash: |
              MANIFESTS=(${ARCHPARAMETERS/--/ })
              echo "${MANIFESTS[@]}"
            displayName: 'debug echo'
          - bash: 'env'
            displayName: 'debug env'
          - bash: |
              MANIFESTS=(${ARCHPARAMETERS/--/ })
              docker manifest create "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "${MANIFESTS[@]}"
            ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
              env:
                DEVTAG: 'dev'
          - ${{ each value in parameters.matrix }}:
              - bash: |
                  docker manifest annotate "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).${{ value.baseArch }}.${DEVTAG:-$(Build.BuildId)}" --os $(baseOS) --arch ${{ value.targetProc }}${variant:+ --variant $variant}
                env:
                  variant: ${{ value.variant }}
                  ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
                    DEVTAG: 'dev'
          # - bash: |
          #     docker manifest push --purge "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}"
          #   ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
          #     env:
          #       DEVTAG: 'dev'
          # - bash: |
          #     docker manifest create "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).amd64.${DEVTAG:-$(Build.BuildId)}" "$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).arm64v8.${DEVTAG:-$(Build.BuildId)}"
          #     docker manifest annotate "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).amd64.${DEVTAG:-$(Build.BuildId)}" --os linux --arch amd64
          #     docker manifest annotate "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).arm64v8.${DEVTAG:-$(Build.BuildId)}" --os linux --arch arm64 --variant v8
          #     docker manifest push --purge "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}"
          #   ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
          #     env:
          #       DEVTAG: 'dev'
