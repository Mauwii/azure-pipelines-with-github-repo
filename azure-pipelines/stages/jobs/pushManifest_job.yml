parameters:
  - name: matrix
    type: object
  - name: maxParallelJobs
    type: number

jobs:
  - job:
    condition: succeeded()
    displayName: pushManifest
    steps:
      - task: Docker@2
        displayName: docker login
        inputs:
          containerRegistry: 'docker-mauwii'
          command: 'login'
      - ${{ if not(eq(variables['Build.SourceBranch'], 'refs/heads/main')) }}:
          - bash: 'echo "##vso[task.setvariable variable=DEVTAG]dev"'
            displayName: 'set DEVTAG'
      - ${{ each value in parameters.matrix }}:
          - bash: |
              export ARCHPARAMETERS_${{ value.key }}="$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).${{ value.key }}.${DEVTAG:-$(Build.BuildId)}"
              echo "##vso[task.setvariable variable=ARCHPARAMETERS_${{ value.key }}]$ARCHPARAMETERS_${{ value.key }}"
              export ARCHPARAMETERS="${ARCHPARAMETERS:+$ARCHPARAMETERS--}${ARCHPARAMETERS_${{ value.key }}}"
              echo "##vso[task.setvariable variable=ARCHPARAMETERS]$ARCHPARAMETERS"
            displayName: 'add ${{ value.key }}'
      - bash: |
          MANIFESTS=(${ARCHPARAMETERS/--/ })
          docker manifest create "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "${MANIFESTS[@]}"
        displayName: create manifest
      - ${{ each value in parameters.matrix }}:
          - bash: |
              docker manifest annotate "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}" "$(dockerhubuser)/$(dockerimage):$(baseOS).$(baseDistro).$(baseVersion).${{ value.key }}.${DEVTAG:-$(Build.BuildId)}"
            displayName: 'annotate ${{ value.key }}'
      - bash: |
          docker manifest push --purge "$(dockerhubuser)/$(dockerimage):${DEVTAG:-latest}"
        displayName: 'push manifest'
